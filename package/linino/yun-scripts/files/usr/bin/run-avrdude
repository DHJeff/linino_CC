#!/bin/sh

OE_PATH=/sys/class/gpio/gpio21/value
OE_VALUE=$(cat $OE_PATH)

# remove SPI driver to avoid conflicts while AVR programming
TTY_PLAIN=$(lsmod | grep spi_tty_plain)
if [ "x$TTY_PLAIN" != "x" ]; then
	rmmod spi-tty-plain
	if [ "$?" != "0" ]; then
		exit
	fi
fi

GPIO_DS=$(lsmod | grep spi_gpio)
if [ "x$GPIO_DS" != "x" ]; then
	rmmod spi-gpio
	if [ "$?" != "0" ]; then
		exit
	fi
fi

# unbind spi_gpio driver
echo spi_gpio.1 > /sys/bus/platform/drivers/spi_gpio/unbind 

# program AVR
echo 1 > $OE_PATH

# read efuse settings
avrdude  -q -q -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U efuse:r:/tmp/efuse:d
read EFUSE < /tmp/efuse
rm -f /tmp/efuse
if [ "x$EFUSE" = "x203" ] # 203 = 0xCB
then
	avrdude -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xCB:m -Uflash:w:$1:i $2
else
	avrdude -c linuxgpio -C /etc/avrdude.conf -p m32u4 -U lfuse:w:0xFF:m -U hfuse:w:0xD8:m -U efuse:w:0xFB:m -Uflash:w:$1:i $2
fi

# bind spi_gpio driver
echo spi_gpio.1 > /sys/bus/platform/drivers/spi_gpio/bind

# Restore previous status
echo $OE_VALUE > $OE_PATH
if [ "x$GPIO_DS" != "x" ]; then
	insmod spi-gpio
fi

if [ "x$TTY_PLAIN" != "x" ]; then
	insmod spi-tty-plain
fi
